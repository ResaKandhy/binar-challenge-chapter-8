{
  "openapi": "3.0.3",
  "info": {
    "title": "Binar Academy Bootcamp - FSW - Chapter 8 - Challenge",
    "description": "Ini adalah repository RESTful API yang menjadi basis untuk teman-teman berkreasi di challenge chapter 8. Ikuti petunjuk di bawah dengan seksama untuk memastikan teman-teman dapat menjalankan RESTful API.",
    "termsOfService": "https://github.com/berbinarbinar/binar-challenge-chapter-8/blob/develop/README.md",
    "contact": {
      "email": "binar@academy.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "externalDocs": {
    "description": "Find out more about challange chapter 8",
    "url": "https://github.com/berbinarbinar/binar-challenge-chapter-8"
  },
  "servers": [
    {
      "url": "http://localhost:4000/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Players",
      "description": "Everything about players"
    }
  ],
  "paths": {
    "/players": {
      "get": {
        "tags": [
          "Players"
        ],
        "summary": "Finds all players",
        "description": "Only registered player can be shown",
        "operationId": "getPlayers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Players"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Players"
        ],
        "summary": "Add a new player to the game",
        "description": "Add a new player to the game",
        "operationId": "createPlayer",
        "requestBody": {
          "description": "Create a new player to the game",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Register"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Register"
                }
              }
            }
          },
          "400": {
            "description": "Failed"
          }
        }
      }
    },
    "/players/{playerId}": {
      "get": {
        "tags": [
          "Players"
        ],
        "summary": "Find player by ID",
        "description": "Show a single player data",
        "operationId": "getPlayerById",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "description": "ID of player to show",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Players"
                }
              }
            }
          },
          "400": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "tags": [
          "Players"
        ],
        "summary": "Update an existing player",
        "description": "Update an existing player parameter",
        "operationId": "updatePlayer",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "description": "Player id that need to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existent player in the game",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Update"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Failed to update"
          }
        }
      },
      "delete": {
        "tags": [
          "Players"
        ],
        "summary": "Deletes a player",
        "description": "delete a player",
        "operationId": "deletePlayer",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "description": "Player id to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "FAILED"
          }
        }
      }
    },
    "/Players/exp/{playerId}": {
      "post": {
        "tags": [
          "Players"
        ],
        "summary": "Update player experience",
        "description": "",
        "operationId": "updateExperience",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "description": "ID of player to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Exp"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SUCCESS"
          },
          "400": {
            "description": "FAILED"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Exp": {
        "type": "object",
        "properties": {
          "exp": {
            "type": "integer",
            "format": "int64",
            "example": 600000
          }
        }
      },
      "Players": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "Peter Joe"
          },
          "email": {
            "type": "string",
            "example": "peterjoe@email.com"
          },
          "exp": {
            "type": "integer",
            "format": "int64",
            "example": 600000
          },
          "lvl": {
            "type": "integer",
            "format": "int32",
            "example": 666
          }
        }
      },
      "Update": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "Peter Joe"
          },
          "email": {
            "type": "string",
            "example": "peterjoe@email.com"
          },
          "password": {
            "type": "string",
            "example": null
          }
        }
      },
      "Register": {
        "required": [
          "username",
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "Peter Joe"
          },
          "email": {
            "type": "string",
            "example": "peterjoe@email.com"
          },
          "password": {
            "type": "string",
            "example": null
          }
        }
      }
    }
  }
}